<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lancelot.mock.mapper.MockConfigMapper">
<!--    <cache  flushInterval="20000" readOnly="true" type="MockMyabtisCache"/>-->
    <resultMap type="com.lancelot.mock.domain.MockConfig" id="MockConfigResult">
        <result property="id"    column="id"    />
        <result property="interfaceName"    column="interface_name"    />
        <result property="methodName"    column="method_name"    />
        <result property="groupName"    column="group_name"    />
        <result property="version"    column="version"    />
        <result property="data"    column="data"    />
        <result property="enabled"    column="enabled"    />
        <result property="createdAt"    column="created_at"    />
        <result property="updatedAt"    column="updated_at"    />
        <result property="matchDataId"    column="match_data_id"    />
        <result property="appliactionName"    column="appliaction_name"    />
        <result property="type"    column="type"    />
        <result property="serverSideMock"    column="server_side_mock"    />
        <result property="directMatch"    column="direct_match"    />
    </resultMap>

    <sql id="selectMockConfigVo">
        select id, interface_name, method_name, group_name, version, data, enabled,
        created_at, updated_at, match_data_id, appliaction_name, type, server_side_mock,direct_match from mock_config
    </sql>

    <select id="selectMockConfigList" parameterType="com.lancelot.mock.domain.MockConfig" resultMap="MockConfigResult">
        <include refid="selectMockConfigVo"/>
        <where>  
            <if test="interfaceName != null  and interfaceName != ''"> and interface_name = #{interfaceName}</if>
            <if test="methodName != null  and methodName != ''"> and method_name  = #{methodName}</if>
            <if test="groupName != null  and groupName != ''"> and group_name  = #{groupName}</if>
            <if test="version != null  and version != ''"> and version = #{version}</if>
            <if test="data != null  and data != ''"> and data = #{data}</if>
            <if test="enabled != null  and enabled != ''"> and enabled = #{enabled}</if>
            <if test="createdAt != null "> and created_at = #{createdAt}</if>
            <if test="updatedAt != null "> and updated_at = #{updatedAt}</if>
            <if test="matchDataId != null "> and match_data_id = #{matchDataId}</if>
            <if test="appliactionName != null  and appliactionName != ''"> and appliaction_name = #{appliactionName}</if>
            <if test="type != null  and type != ''"> and type = #{type}</if>
            <if test="serverSideMock != null "> and server_side_mock = #{serverSideMock}</if>
            <if test="directMatch != null "> and direct_match = #{directMatch}</if>
            order by created_at desc
        </where>
    </select>

    <select id="selectMockConfig" parameterType="com.lancelot.mock.domain.MockConfig" resultMap="MockConfigResult">
        <include refid="selectMockConfigVo"/>
        <where>
            interface_name = #{interfaceName} and method_name = #{methodName}
            <if test="appliactionName != null  and appliactionName != ''"> and appliaction_name = #{appliactionName}</if>
            <if test="groupName != null  and groupName != ''"> and group_name = #{groupName}</if>
            <if test="version != null  and version != ''"> and version = #{version}</if>
            <if test="type != null  and type != ''"> and type = #{type}</if>
            <if test="enabled != null  and enabled != ''"> and enabled = #{enabled}</if>
            <if test="directMatch != null "> and direct_match = #{directMatch}</if>
        </where>
    </select>


    <select id="selectMockConfigData" parameterType="com.lancelot.mock.domain.MockConfig" resultType="java.lang.String">
        select  d.data from mock_config c left join mock_data d on c.match_data_id = d.id
        where c.interface_name = #{interfaceName} and
        c.method_name = #{methodName} and c.group_name = #{groupName}
        and c.version = #{version}
        <if test="data != null  and data != ''">
            and d.mock_req_params = #{data}
        </if>
    </select>
    
    <select id="selectMockConfigById" parameterType="Long" resultMap="MockConfigResult">
        <include refid="selectMockConfigVo"/>
        where id = #{id}
    </select>

    <select id="fuzzlySelectMockConfigList" parameterType="com.lancelot.mock.domain.MockConfig" resultMap="MockConfigResult">
        <include refid="selectMockConfigVo"/>
        <where>
            <if test="interfaceName != null  and interfaceName != ''"> and interface_name like concat('%', #{interfaceName}, '%')</if>
            <if test="methodName != null  and methodName != ''"> and method_name like concat('%', #{methodName}, '%')</if>
            <if test="groupName != null  and groupName != ''"> and group_name like concat('%', #{groupName}, '%')</if>
            <if test="version != null  and version != ''"> and version = #{version}</if>
            <if test="data != null  and data != ''"> and data = #{data}</if>
            <if test="enabled != null  and enabled != ''"> and enabled = #{enabled}</if>
            <if test="createdAt != null "> and created_at = #{createdAt}</if>
            <if test="updatedAt != null "> and updated_at = #{updatedAt}</if>
            <if test="matchDataId != null "> and match_data_id = #{matchDataId}</if>
            <if test="appliactionName != null  and appliactionName != ''"> and appliaction_name like concat('%', #{appliactionName}, '%')</if>
            <if test="type != null  and type != ''"> and type = #{type}</if>
            <if test="serverSideMock != null "> and server_side_mock = #{serverSideMock}</if>
            <if test="directMatch != null "> and direct_match = #{directMatch}</if>
            order by created_at desc
        </where>
    </select>

    <insert id="insertMockConfig" parameterType="com.lancelot.mock.domain.MockConfig" useGeneratedKeys="true" keyProperty="id" >
        insert into mock_config
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="interfaceName != null">interface_name,</if>
            <if test="methodName != null">method_name,</if>
            <if test="groupName != null">group_name,</if>
            <if test="version != null">version,</if>
            <if test="data != null">data,</if>
            <if test="enabled != null">enabled,</if>
            <if test="createdAt != null">created_at,</if>
            <if test="updatedAt != null">updated_at,</if>
            <if test="matchDataId != null">match_data_id,</if>
            <if test="appliactionName != null">appliaction_name,</if>
            <if test="type != null and type != ''">type,</if>
            <if test="serverSideMock != null">server_side_mock,</if>
            <if test="directMatch != null">direct_match,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="interfaceName != null">#{interfaceName},</if>
            <if test="methodName != null">#{methodName},</if>
            <if test="groupName != null">#{groupName},</if>
            <if test="version != null">#{version},</if>
            <if test="data != null">#{data},</if>
            <if test="enabled != null">#{enabled},</if>
            <if test="createdAt != null">#{createdAt},</if>
            <if test="updatedAt != null">#{updatedAt},</if>
            <if test="matchDataId != null">#{matchDataId},</if>
            <if test="appliactionName != null">#{appliactionName},</if>
            <if test="type != null and type != ''">#{type},</if>
            <if test="serverSideMock != null">#{serverSideMock},</if>
            <if test="directMatch != null">#{directMatch},</if>
        </trim>
    </insert>

    <update id="updateMockConfig" parameterType="com.lancelot.mock.domain.MockConfig" flushCache="true">
        update mock_config
        <trim prefix="SET" suffixOverrides=",">
            <if test="interfaceName != null">interface_name = #{interfaceName},</if>
            <if test="methodName != null">method_name = #{methodName},</if>
            <if test="groupName != null">group_name = #{groupName},</if>
            <if test="version != null">version = #{version},</if>
            <if test="data != null">data = #{data},</if>
            <if test="enabled != null">enabled = #{enabled},</if>
            <if test="createdAt != null">created_at = #{createdAt},</if>
            <if test="updatedAt != null">updated_at = #{updatedAt},</if>
            <if test="matchDataId != null">match_data_id = #{matchDataId},</if>
            <if test="appliactionName != null">appliaction_name = #{appliactionName},</if>
            <if test="type != null and type != ''">type = #{type},</if>
            <if test="serverSideMock != null">server_side_mock = #{serverSideMock},</if>
            <if test="directMatch != null">direct_match = #{directMatch},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteMockConfigById" parameterType="Long" flushCache="true">
        delete from mock_config where id = #{id}
    </delete>

    <delete id="deleteMockConfigByIds" parameterType="String" flushCache="true">
        delete from mock_config where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <insert id="batchConfigMock" useGeneratedKeys="true" keyProperty="id">
        insert into mock_config
        <trim prefix="(" suffix=")" suffixOverrides=",">
            interface_name,method_name,group_name,version,created_at
        </trim>
        values
        <foreach item="item" index="index" collection="list" separator=",">
            (#{item.interfaceName},#{item.methodName},#{item.groupName},#{item.version}, now())
        </foreach>
    </insert>

</mapper>